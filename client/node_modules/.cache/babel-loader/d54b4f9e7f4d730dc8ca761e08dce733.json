{"ast":null,"code":"var _jsxFileName = \"/Users/laura/Desktop/server/client/src/components/CommentsPost.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCommentPost } from '../store/actions/commenPostActions';\n\nclass CommentsPost extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n      console.log(e.target.value);\n    };\n\n    this.handleSubmit = e => {\n      e.prevent.default();\n    };\n\n    this.state = {\n      comment: ''\n    };\n  }\n\n  componentDidMount() {\n    let {\n      itineraryId\n    } = this.props;\n    this.props.fetchCommentPost(itineraryId);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"commentForm-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      ype: \"text\",\n      id: \"comment\",\n      placeholder: \"Your comment\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \">\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    commentsPost: state.commentsPost\n  };\n};\n\nconst mapDispatchProps = dispatch => {\n  return {\n    fetchCommentPost: id => dispatch(fetchCommentPost(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(CommentsPost);","map":{"version":3,"sources":["/Users/laura/Desktop/server/client/src/components/CommentsPost.js"],"names":["React","Component","connect","fetchCommentPost","CommentsPost","constructor","props","handleChange","e","setState","target","id","value","console","log","handleSubmit","prevent","default","state","comment","componentDidMount","itineraryId","render","mapStateToProps","commentsPost","mapDispatchProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,oCAAjC;;AAEA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AACjCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOnBC,YAPmB,GAOHC,CAAD,IAAO;AAClB,WAAKC,QAAL,CAAc;AACV,SAACD,CAAC,CAACE,MAAF,CAASC,EAAV,GAAeH,CAAC,CAACE,MAAF,CAASE;AADd,OAAd;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,CAAC,CAACE,MAAF,CAASE,KAArB;AACH,KAZkB;;AAAA,SAcnBG,YAdmB,GAcHP,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACQ,OAAF,CAAUC,OAAV;AAEH,KAjBkB;;AAEf,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAGH;;AAcDC,EAAAA,iBAAiB,GAAG;AAChB,QAAI;AAAEC,MAAAA;AAAF,QAAkB,KAAKf,KAA3B;AACA,SAAKA,KAAL,CAAWH,gBAAX,CAA4BkB,WAA5B;AACH;;AAGDC,EAAAA,MAAM,GAAG;AAEL,WACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAU,MAAA,GAAG,EAAC,MAAd;AAAqB,MAAA,EAAE,EAAC,SAAxB;AAAkC,MAAA,WAAW,EAAC,cAA9C;AAA6D,MAAA,QAAQ,EAAE,KAAKf,YAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,QAAQ,EAAE,KAAKQ,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHJ,CADJ;AASH;;AArCgC;;AAwCrC,MAAMQ,eAAe,GAAGL,KAAK,IAAI;AAC7B,SAAO;AACHM,IAAAA,YAAY,EAAEN,KAAK,CAACM;AADjB,GAAP;AAGH,CAJD;;AAMA,MAAMC,gBAAgB,GAAGC,QAAQ,IAAI;AACjC,SAAO;AACHvB,IAAAA,gBAAgB,EAAGQ,EAAD,IAAQe,QAAQ,CAACvB,gBAAgB,CAACQ,EAAD,CAAjB;AAD/B,GAAP;AAGH,CAJD;;AAMA,eAAeT,OAAO,CAClBqB,eADkB,EAElBE,gBAFkB,CAAP,CAGbrB,YAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCommentPost } from '../store/actions/commenPostActions'\n\nclass CommentsPost extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            comment: ''\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n        console.log(e.target.value)\n    }\n\n    handleSubmit = (e) => {\n        e.prevent.default();\n\n    }\n\n    componentDidMount() {\n        let { itineraryId } = this.props\n        this.props.fetchCommentPost(itineraryId)\n    }\n\n\n    render() {\n\n        return (\n            <div className=\"commentForm-container\">\n                <textarea ype=\"text\" id=\"comment\" placeholder=\"Your comment\" onChange={this.handleChange} ></textarea>\n\n                <button type=\"submit\" onSubmit={this.handleSubmit}>></button>\n\n            </div>\n        )\n\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        commentsPost: state.commentsPost\n    }\n}\n\nconst mapDispatchProps = dispatch => {\n    return {\n        fetchCommentPost: (id) => dispatch(fetchCommentPost(id))\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchProps\n)(CommentsPost);"]},"metadata":{},"sourceType":"module"}