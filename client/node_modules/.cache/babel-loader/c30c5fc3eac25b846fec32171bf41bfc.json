{"ast":null,"code":"var _jsxFileName = \"/Users/laura/Desktop/server/client/src/components/CommentsPost.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCommentPost } from '../store/actions/commenPostActions';\n\nclass CommentsPost extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.prevent.default();\n    };\n\n    this.state = {\n      comment: ''\n    };\n  }\n\n  componentDidMount() {\n    let {\n      itineraryId\n    } = this.props;\n    this.props.fetchCommentPost(itineraryId);\n  }\n\n  render() {\n    const {\n      user,\n      isAuthenticated\n    } = this.props;\n    console.log(this.props);\n    if (isAuthenticated) return React.createElement(\"div\", {\n      className: \"commentForm-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      ype: \"text\",\n      id: \"comment\",\n      placeholder: \"Your comment\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \">\"));else return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Loggin to leave a comment\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    commentsPost: state.commentsPost\n  };\n};\n\nconst mapDispatchProps = dispatch => {\n  return {\n    fetchCommentPost: id => dispatch(fetchCommentPost(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(CommentsPost);","map":{"version":3,"sources":["/Users/laura/Desktop/server/client/src/components/CommentsPost.js"],"names":["React","Component","connect","fetchCommentPost","CommentsPost","constructor","props","handleChange","e","setState","target","id","value","handleSubmit","prevent","default","state","comment","componentDidMount","itineraryId","render","user","isAuthenticated","console","log","mapStateToProps","commentsPost","mapDispatchProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,oCAAjC;;AAEA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AACjCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOnBC,YAPmB,GAOHC,CAAD,IAAO;AAClB,WAAKC,QAAL,CAAc;AACV,SAACD,CAAC,CAACE,MAAF,CAASC,EAAV,GAAeH,CAAC,CAACE,MAAF,CAASE;AADd,OAAd;AAGH,KAXkB;;AAAA,SAanBC,YAbmB,GAaHL,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACM,OAAF,CAAUC,OAAV;AAEH,KAhBkB;;AAEf,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAGH;;AAaDC,EAAAA,iBAAiB,GAAG;AAChB,QAAI;AAAEC,MAAAA;AAAF,QAAkB,KAAKb,KAA3B;AACA,SAAKA,KAAL,CAAWH,gBAAX,CAA4BgB,WAA5B;AACH;;AAGDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAA4B,KAAKhB,KAAvC;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAjB;AACA,QAAIgB,eAAJ,EACI,OACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAU,MAAA,GAAG,EAAC,MAAd;AAAqB,MAAA,EAAE,EAAC,SAAxB;AAAkC,MAAA,WAAW,EAAC,cAA9C;AAA6D,MAAA,QAAQ,EAAE,KAAKf,YAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,QAAQ,EAAE,KAAKM,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHJ,CADJ,CADJ,KAWI,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,CADJ;AAKP;;AA5CgC;;AA+CrC,MAAMY,eAAe,GAAGT,KAAK,IAAI;AAC7B,SAAO;AACHU,IAAAA,YAAY,EAAEV,KAAK,CAACU;AADjB,GAAP;AAGH,CAJD;;AAMA,MAAMC,gBAAgB,GAAGC,QAAQ,IAAI;AACjC,SAAO;AACHzB,IAAAA,gBAAgB,EAAGQ,EAAD,IAAQiB,QAAQ,CAACzB,gBAAgB,CAACQ,EAAD,CAAjB;AAD/B,GAAP;AAGH,CAJD;;AAMA,eAAeT,OAAO,CAClBuB,eADkB,EAElBE,gBAFkB,CAAP,CAGbvB,YAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCommentPost } from '../store/actions/commenPostActions'\n\nclass CommentsPost extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            comment: ''\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.prevent.default();\n\n    }\n\n    componentDidMount() {\n        let { itineraryId } = this.props\n        this.props.fetchCommentPost(itineraryId)\n    }\n\n\n    render() {\n        const { user, isAuthenticated } = this.props;\n        console.log(this.props)\n        if (isAuthenticated)\n            return (\n                <div className=\"commentForm-container\">\n                    <textarea ype=\"text\" id=\"comment\" placeholder=\"Your comment\" onChange={this.handleChange} ></textarea>\n\n                    <button type=\"submit\" onSubmit={this.handleSubmit}>></button>\n\n\n                </div>\n            )\n        else\n            return (\n                <div>\n                    <p>Loggin to leave a comment</p>\n                </div>\n            )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        commentsPost: state.commentsPost\n    }\n}\n\nconst mapDispatchProps = dispatch => {\n    return {\n        fetchCommentPost: (id) => dispatch(fetchCommentPost(id))\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchProps\n)(CommentsPost);"]},"metadata":{},"sourceType":"module"}