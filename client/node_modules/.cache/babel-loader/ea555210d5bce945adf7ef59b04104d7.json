{"ast":null,"code":"var _jsxFileName = \"/Users/laura/Desktop/server/client/src/components/Itineraries.js\";\nimport React, { Component } from 'react';\nimport Footer from './Footer';\nimport { connect } from 'react-redux';\nimport { fetchItineraryList } from '../store/actions/itineraryActions';\nimport userIcon from '../images/userIcon.png';\nimport { Link } from 'react-router-dom';\nimport CityCard from './CityCard';\nimport Activities from './Activities';\nimport Comments from './Comments';\nimport { Button } from 'reactstrap';\nimport { Alert } from 'react-bootstrap';\n\nclass Itineraries extends Component {\n  constructor(props) {\n    super(props);\n\n    this.alertDismissible = e => {\n      this.setState(prevState => ({\n        show: !prevState.show\n      }));\n    };\n\n    this.state = {\n      city: '',\n      // I need it for the child component CityCard\n      // showContent: true,\n      show: true\n    }; // this.handleClick = this.handleClick.bind(this)\n\n    this.alertDismissible = this.alertDismissible.bind(this);\n  }\n\n  componentDidMount() {\n    let city = window.location.pathname.split('/')[2];\n    this.setState({\n      city\n    }); // I need the setState for the child component CityCard\n\n    this.props.fetchItineraryList(city);\n  } // handleClick = (e) => {\n  //     this.setState(prevState => ({\n  //         showContent: !prevState.showContent\n  //     }));\n  // }\n\n\n  render() {\n    const {\n      itineraries\n    } = this.props;\n    console.log(itineraries);\n    console.log(this.props.itineraries);\n    const itinerariesList = itineraries.map(itinerary => {\n      return React.createElement(\"div\", {\n        className: \"itineraryItem\",\n        key: itinerary._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: userIcon,\n        alt: \"userPhoto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"UserName\")), React.createElement(\"div\", {\n        className: \"titleIt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \" \", itinerary.title, \" \")), React.createElement(\"div\", {\n        className: \"detailsIt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Likes:\", itinerary.rating), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, itinerary.duration), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, itinerary.price, \" \")), React.createElement(\"div\", {\n        className: \"hashtag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, itinerary.hashtag)), React.createElement(\"div\", {\n        className: \"viewAll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"tranparent\",\n        id: \"show\",\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, this.state.showContent ? 'View All' : 'Close', \"  \"), React.createElement(Alert, {\n        show: this.state.show,\n        variant: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Alert.Heading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"How's it going?!\"), React.createElement(Activities, {\n        activities: itinerary.activities,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(Comments, {\n        itineraryId: itinerary._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"d-flex justify-content-end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.alertDismissible,\n        variant: \"outline-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Close me ya'll!\"))), !this.state.show && React.createElement(Button, {\n        onClick: this.alertDismissible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Show Alert\")));\n    });\n    const {\n      loading\n    } = this.props;\n    if (!loading) return React.createElement(\"div\", {\n      className: \"flex-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(CityCard, {\n      city: this.state.city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Available MYtineraries:\"), React.createElement(\"div\", {\n      className: \"itineraries-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, itinerariesList), React.createElement(Link, {\n      to: \"/cities\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        color: 'blue'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Chose another city...\"))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }));else return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    itineraries: state.itineraries.itineraries,\n    loading: state.itineraries.loading\n  };\n};\n\nconst mapDispatchProps = dispatch => {\n  return {\n    fetchItineraryList: city => dispatch(fetchItineraryList(city))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Itineraries);","map":{"version":3,"sources":["/Users/laura/Desktop/server/client/src/components/Itineraries.js"],"names":["React","Component","Footer","connect","fetchItineraryList","userIcon","Link","CityCard","Activities","Comments","Button","Alert","Itineraries","constructor","props","alertDismissible","e","setState","prevState","show","state","city","bind","componentDidMount","window","location","pathname","split","render","itineraries","console","log","itinerariesList","map","itinerary","_id","title","rating","duration","price","hashtag","handleClick","showContent","activities","loading","color","mapStateToProps","mapDispatchProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Footer from './Footer';\nimport { connect } from 'react-redux';\nimport { fetchItineraryList } from '../store/actions/itineraryActions';\nimport userIcon from '../images/userIcon.png'\nimport { Link } from 'react-router-dom';\nimport CityCard from './CityCard';\nimport Activities from './Activities';\nimport Comments from './Comments';\nimport { Button } from 'reactstrap';\nimport { Alert } from 'react-bootstrap'\n\n\nclass Itineraries extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            city: '',\n            // I need it for the child component CityCard\n\n            // showContent: true,\n            show: true,\n\n        }\n\n        // this.handleClick = this.handleClick.bind(this)\n        this.alertDismissible = this.alertDismissible.bind(this)\n    }\n\n\n    componentDidMount() {\n        let city = window.location.pathname.split('/')[2]\n\n        this.setState({ city })\n        // I need the setState for the child component CityCard\n\n        this.props.fetchItineraryList(city);\n    }\n\n\n    // handleClick = (e) => {\n    //     this.setState(prevState => ({\n    //         showContent: !prevState.showContent\n    //     }));\n    // }\n\n    alertDismissible = (e) => {\n        this.setState(prevState => ({\n            show: !prevState.show\n        }));\n    }\n\n    render() {\n        const { itineraries } = this.props\n        console.log(itineraries)\n        console.log(this.props.itineraries)\n\n\n        const itinerariesList = itineraries.map(itinerary => {\n\n\n            return (\n                <div className=\"itineraryItem\" key={itinerary._id}>\n\n                    <div className=\"user\">\n                        <img src={userIcon} alt=\"userPhoto\" />\n                        <p>UserName</p>\n                    </div>\n\n                    <div className=\"titleIt\">\n                        <h3> {itinerary.title} </h3>\n                    </div>\n\n                    <div className=\"detailsIt\">\n                        <p>Likes:{itinerary.rating}</p>\n                        <br></br>\n                        <p>{itinerary.duration}</p>\n                        <br></br>\n                        <p>{itinerary.price} </p>\n                    </div>\n\n                    <div className=\"hashtag\">\n                        <p>{itinerary.hashtag}</p>\n                    </div>\n\n                    <div className=\"viewAll\">\n\n                        <Button color=\"tranparent\" id=\"show\" onClick={this.handleClick} >\n\n                            {this.state.showContent ? 'View All' : 'Close'}  </Button>\n\n                        <Alert show={this.state.show} variant=\"success\">\n                            <Alert.Heading>How's it going?!</Alert.Heading>\n                            <Activities activities={itinerary.activities} />\n                            <Comments itineraryId={itinerary._id} />\n                            <hr />\n                            <div className=\"d-flex justify-content-end\">\n                                <Button onClick={this.alertDismissible} variant=\"outline-success\">\n                                    Close me ya'll!\n                                 </Button>\n                            </div>\n                        </Alert>\n\n                        {!this.state.show && <Button onClick={this.alertDismissible}>Show Alert</Button>}\n\n\n\n\n\n\n                    </div>\n\n                </div>\n            )\n        })\n        const { loading } = this.props;\n\n        if (!loading)\n            return (\n                <div className=\"flex-container\">\n\n                    <CityCard city={this.state.city} />\n\n                    <p>Available MYtineraries:</p>\n\n                    <div className=\"itineraries-list\">\n                        {itinerariesList}\n                    </div>\n\n                    <Link to=\"/cities\">\n                        <center><p style={{ color: 'blue' }}>Chose another city...</p></center>\n                    </Link>\n                    <Footer />\n                </div>\n            )\n        else\n            return (\n                <div>Loading...</div>\n            )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        itineraries: state.itineraries.itineraries,\n        loading: state.itineraries.loading\n    }\n}\n\nconst mapDispatchProps = dispatch => {\n    return {\n        fetchItineraryList: (city) => dispatch(fetchItineraryList(city))\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchProps\n)(Itineraries);"]},"metadata":{},"sourceType":"module"}