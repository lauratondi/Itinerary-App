{"ast":null,"code":"var _jsxFileName = \"/Users/laura/Desktop/server/client/src/components/Comments.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchComments } from '../store/actions/commentActions';\nimport CommentsPost from './CommentsPost';\n\nclass Comments extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      itineraries: ''\n    };\n  }\n\n  componentDidMount() {\n    let {\n      itineraryId\n    } = this.props; // this.setState({ id })\n\n    this.props.fetchComments(itineraryId); // itineraryId defined in Itinerary components line 73\n  }\n\n  render() {\n    const {\n      comments\n    } = this.props;\n    console.log(comments);\n    const commentsList = comments.map(comment => {\n      return React.createElement(\"div\", {\n        className: \"commentBox\",\n        key: comment._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"comment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, comment.userId, \" - \", comment.text));\n    }); // const { loading } = this.props;\n\n    const {\n      user,\n      isAuthenticated\n    } = this.props.login;\n    if (isAuthenticated) return React.createElement(\"div\", {\n      className: \"flex-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Hi \", user.email, \"!\"), React.createElement(\"div\", {\n      className: \"comments-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Comments:\"), commentsList), React.createElement(CommentsPost, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    comments: state.comments.comments\n  };\n};\n\nconst mapDispatchProps = dispatch => {\n  return {\n    fetchComments: id => dispatch(fetchComments(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Comments);","map":{"version":3,"sources":["/Users/laura/Desktop/server/client/src/components/Comments.js"],"names":["React","Component","connect","fetchComments","CommentsPost","Comments","constructor","props","state","itineraries","componentDidMount","itineraryId","render","comments","console","log","commentsList","map","comment","_id","userId","text","user","isAuthenticated","login","email","mapStateToProps","mapDispatchProps","dispatch","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,iCAA9B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAGA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC7BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE;AADJ,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,QAAI;AAAEC,MAAAA;AAAF,QAAkB,KAAKJ,KAA3B,CADgB,CAEhB;;AACA,SAAKA,KAAL,CAAWJ,aAAX,CAAyBQ,WAAzB,EAHgB,CAIhB;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKN,KAA1B;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEA,UAAMG,YAAY,GAAGH,QAAQ,CAACI,GAAT,CAAaC,OAAO,IAAI;AAEzC,aACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,GAAG,EAAEA,OAAO,CAACC,GAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,OAAO,CAACE,MADb,SACwBF,OAAO,CAACG,IADhC,CAFJ,CADJ;AAUH,KAZoB,CAArB,CAJK,CAkBL;;AACA,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAA4B,KAAKhB,KAAL,CAAWiB,KAA7C;AAEA,QAAID,eAAJ,EACI,OACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAOD,IAAI,CAACG,KAAZ,MADJ,EAEI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEKT,YAFL,CAFJ,EAMI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ;AAWP;;AAhD4B;;AAmDjC,MAAMU,eAAe,GAAGlB,KAAK,IAAI;AAC7B,SAAO;AACHK,IAAAA,QAAQ,EAAEL,KAAK,CAACK,QAAN,CAAeA;AADtB,GAAP;AAGH,CAJD;;AAMA,MAAMc,gBAAgB,GAAGC,QAAQ,IAAI;AACjC,SAAO;AACHzB,IAAAA,aAAa,EAAG0B,EAAD,IAAQD,QAAQ,CAACzB,aAAa,CAAC0B,EAAD,CAAd;AAD5B,GAAP;AAGH,CAJD;;AAMA,eAAe3B,OAAO,CAClBwB,eADkB,EAElBC,gBAFkB,CAAP,CAGbtB,QAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchComments } from '../store/actions/commentActions'\nimport CommentsPost from './CommentsPost';\n\n\nclass Comments extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            itineraries: ''\n        }\n    }\n\n    componentDidMount() {\n        let { itineraryId } = this.props\n        // this.setState({ id })\n        this.props.fetchComments(itineraryId)\n        // itineraryId defined in Itinerary components line 73\n    }\n\n    render() {\n        const { comments } = this.props\n        console.log(comments)\n\n        const commentsList = comments.map(comment => {\n\n            return (\n                <div className=\"commentBox\" key={comment._id}>\n\n                    <div className=\"comment\">\n                        {comment.userId} - {comment.text}\n                    </div>\n\n                </div>\n            )\n\n        })\n\n        // const { loading } = this.props;\n        const { user, isAuthenticated } = this.props.login;\n\n        if (isAuthenticated)\n            return (\n                <div className=\"flex-container\">\n                    <p>Hi {user.email}!</p>\n                    <div className=\"comments-list\">\n                        <h3>Comments:</h3>\n                        {commentsList}\n                    </div>\n                    <CommentsPost />\n\n                </div>\n            )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        comments: state.comments.comments\n    }\n}\n\nconst mapDispatchProps = dispatch => {\n    return {\n        fetchComments: (id) => dispatch(fetchComments(id))\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchProps\n)(Comments);\n"]},"metadata":{},"sourceType":"module"}